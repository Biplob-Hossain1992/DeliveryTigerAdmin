
@{
    ViewBag.Title = "Assign Courier User To Lender";
}

<script src="https://code.angularjs.org/1.2.14/angular.js"></script>

<style>
    .tableUnassignedMerchant, .tableAssignedMerchant {
        position: relative;
        overflow: auto;
        height: 500px;
    }

    .tableUnassignedMerchant, .tableAssignedMerchant thead th {
        position: sticky;
        top: 0;
    }

    #spinner-front {
        position: fixed;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        top: 0;
        left: 0;
        background-color: rgba(255, 255, 255, 0.7);
        z-index: 998;
    }
</style>

<div class="row" ng-app="AssignCourierUserToLenderModule">
    <div class="col-lg-12" ng-controller="AssignCourierUserToLenderController">

        <div id="spinner-front" ng-show="showFullPageLoader">
            <img src="~/Content/loading-spinner.gif" />
        </div>

        <div class="row" ng-init="getLenderUserList()">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-title">
                        <div class="form-group">
                            <h4 class="text-center">Assign Courier User To Lender</h4>
                        </div>
                        <div class="form-group">
                            <div class="form-inline">
                                <div class="input-group">
                                    <label style="margin-right: 5px; font-weight: bold;">Lender: </label>
                                    <select style="border: 1px solid #46b8da;" class="btn btn-default" ng-model="lenderUser">
                                        <option value="0">Select Lender</option>
                                        <option ng-repeat="u in lenderUsers" value="{{u.lenderUserId}}">{{u.lenderName}}({{u.roleName}})</option>
                                    </select>
                                    <button style="margin-left: 10px;" class="btn btn-w-m btn-success" type="button" ng-click="showCourierUsers(lenderUser)">Show</button>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-6">
                                <button style="margin-bottom: 20px;" class="btn btn-lg btn-w-m btn-success" type="button" ng-click="Assign()">Assign</button>
                            </div>
                            <div class="col-lg-6">
                                <button style="margin-bottom: 20px;" class="btn btn-lg btn-w-m btn-success" type="button" ng-click="UnAssign()">UnAssign</button>
                            </div>
                            <div class="col-lg-6">
                                <table class="table table-bordered table-responsive tableUnassignedMerchant">
                                    <thead>
                                        <tr>
                                            <th colspan="4">
                                                Unassigned Courier User List
                                            </th>
                                        </tr>
                                        <tr>
                                            <th>
                                                <input type="checkbox" id="checkAll" ng-change="CheckUncheckAllUnAssign()" ng-model="IsAllCheckedUnAssign">
                                            </th>
                                            <th>CourierUserId</th>
                                            <th>Company Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="unassigned in unassignedMerchant">
                                            <td>
                                                <input type="checkbox" id="checkUnassignedMerchant" name="checkUnassignedMerchant" value="{{unassigned.loanCourierUserId}}" ng-model="unassigned.Selected" ng-change="CheckUncheckHeaderUnassign()">
                                            </td>
                                            <td>{{unassigned.loanCourierUserId}}</td>
                                            <td>{{unassigned.loanCourierUserName}}({{unassigned.loanCourierUserId}})</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-lg-6">
                                <table class="table table-bordered table-responsive tableAssignedMerchant">
                                    <thead>
                                        <tr>
                                            <th colspan="4">
                                                Assigned Courier User List
                                            </th>
                                        </tr>
                                        <tr>
                                            <th>
                                                <input type="checkbox" id="checkAll" ng-change="CheckUncheckAllAssign()" ng-model="IsAllCheckedAssign">
                                            </th>
                                            <th>CourierUserId</th>
                                            <th>Company Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="assigned in assignedMerchant">
                                            <td>
                                                <input type="checkbox" id="checkAssignedMerchant" name="checkAssignedMerchant" value="{{assigned.loanCourierUserId}}" ng-model="assigned.Selected" ng-change="CheckUncheckHeaderAssign()">
                                            </td>
                                            <td>{{assigned.loanCourierUserId}}</td>
                                            <td>{{assigned.loanCourierUserName}}({{assigned.loanCourierUserId}})</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    var app = angular.module('AssignCourierUserToLenderModule', []);
    app.controller('AssignCourierUserToLenderController', function ($scope, $http) {
        $scope.lenderUser = 0;
        $scope.getLenderUserList = function () {
            $http.get(apiBaseURL + 'Fetch/GetLenderUsers', { headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {
                    $scope.lenderUsers = response.data.model;
                }, function error(response) {
                    console.log(response.data);
                });
        }

        $scope.showCourierUsers = function (lenderUserId) {
            $http.get(apiBaseURL + 'Fetch/GetLenderWiseAssignedCourierUsers/' + lenderUserId, { headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {
                    var responseData = response.data.model;
                    $scope.unassignedMerchant = responseData.filter(x => x.assignedCourierUserId == 0);
                    $scope.assignedMerchant = responseData.filter(x => x.assignedCourierUserId != 0);
                }, function error(response) {
                    console.log(response.data);
                });
        }

        $scope.CheckUncheckAllUnAssign = function () {
            for (var i = 0; i < $scope.unassignedMerchant.length; i++) {
                $scope.unassignedMerchant[i].Selected = $scope.IsAllCheckedUnAssign;
            }
        };

        $scope.CheckUncheckAllAssign = function () {
            for (var i = 0; i < $scope.assignedMerchant.length; i++) {
                $scope.assignedMerchant[i].Selected = $scope.IsAllCheckedAssign;
            }
        };

        $scope.CheckUncheckHeaderUnassign = function () {
            $scope.IsAllCheckedUnAssign = true;
            for (var i = 0; i < $scope.unassignedMerchant.length; i++) {
                if (!$scope.unassignedMerchant[i].Selected) {
                    $scope.IsAllCheckedUnAssign = false;
                    break;
                }
            };
        };

        $scope.CheckUncheckHeaderAssign = function () {
            $scope.IsAllCheckedAssign = true;
            for (var i = 0; i < $scope.assignedMerchant.length; i++) {
                if (!$scope.assignedMerchant[i].Selected) {
                    $scope.IsAllCheckedAssign = false;
                    break;
                }
            };
        };

        var unassignedMerchantArray = [];
        $scope.Assign = function () {
            var role = $scope.lenderUsers.filter(x => x.lenderUserId == $scope.lenderUser)[0].roleName;

            if (role == "Admin") {
                if (!window.confirm('Are you sure to assign merchant for Admin user!!!')) {
                    return false;
                }
            }

            for (var i = 0; i < $scope.unassignedMerchant.length; i++) {
                if ($scope.unassignedMerchant[i].Selected) {
                    var singleObj = {};
                    singleObj['AssignmentId'] = 0;
                    singleObj['LenderUserId'] = parseInt($scope.lenderUser);
                    singleObj['CourierUserId'] = parseInt($scope.unassignedMerchant[i].loanCourierUserId);
                    unassignedMerchantArray.push(singleObj);
                }
            };

            if (unassignedMerchantArray.length == 0) {
                alert("No merchant is selected to assign!!!");
                return false;
            }

            var userToken = sessionStorage.getItem('token');

            $scope.showFullPageLoader = true;
            $http.post(apiBaseURL + 'Entry/AssignLenderUserToCourierUser', unassignedMerchantArray,
                {
                    headers: { 'Content-Type': 'application/json', 'Authorization': "Bearer " + userToken }
                })
                .then(function (response) {
                    alert('Assigned Successfully');
                    $scope.showCourierUsers($scope.lenderUser);
                    unassignedMerchantArray = [];
                    $scope.showFullPageLoader = false;
                }, function (error) {
                    console.log(error);
                    $scope.showFullPageLoader = false;
                });
        }

        var assignedMerchantArray = [];
        $scope.UnAssign = function () {
            for (var i = 0; i < $scope.assignedMerchant.length; i++) {
                if ($scope.assignedMerchant[i].Selected) {
                    var singleObj = {};
                    singleObj['AssignmentId'] = parseInt($scope.assignedMerchant[i].assignmentId)
                    singleObj['LenderUserId'] = parseInt($scope.lenderUser);
                    singleObj['CourierUserId'] = parseInt($scope.assignedMerchant[i].loanCourierUserId);
                    assignedMerchantArray.push(singleObj);
                }
            };

            if (assignedMerchantArray.length == 0) {
                alert("No merchant is selected to unassign!!!");
                return false;
            }

            var userToken = sessionStorage.getItem('token');

            $scope.showFullPageLoader = true;
            $http.post(apiBaseURL + 'Entry/UnAssignLenderUserToCourierUser', assignedMerchantArray,
                {
                    headers: { 'Content-Type': 'application/json', 'Authorization': "Bearer " + userToken }
                })
                .then(function (response) {
                    alert('UnAssigned Successfully');
                    $scope.showCourierUsers($scope.lenderUser);
                    assignedMerchantArray = [];
                    $scope.showFullPageLoader = false;
                }, function (error) {
                    console.log(error);
                    $scope.showFullPageLoader = false;
                });
        }
    })
</script>